<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.load.dao.RemoneyInfoMapper" >
  <resultMap id="BaseResultMap" type="com.load.model.RemoneyInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
        <result column="amount" property="amount" jdbcType="INTEGER" />
  <result column="apply_id" property="applyId" jdbcType="INTEGER" />
  <result column="user_id" property="userId" jdbcType="INTEGER" />
  <result column="create_time" property="createTime" jdbcType="INTEGER" />
  <result column="update_time" property="updateTime" jdbcType="INTEGER" />
  <result column="is_delete" property="isDelete" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id,amount,apply_id,user_id,create_time,update_time,is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.load.model.RemoneyInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from remoney_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from remoney_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from remoney_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.load.model.RemoneyInfoExample" >
    delete from remoney_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.load.model.RemoneyInfo" >
    insert into remoney_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
	  id,
 </if>
<if test="amount != null" >
	  amount,
 </if>
<if test="applyId != null" >
	  apply_id,
 </if>
<if test="userId != null" >
	  user_id,
 </if>
<if test="createTime != null" >
	  create_time,
 </if>
<if test="updateTime != null" >
	  update_time,
 </if>
<if test="isDelete != null" >
	  is_delete,
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="amount != null" >
	 #{amount,jdbcType=INTEGER},
	 </if>
  <if test="applyId != null" >
	 #{applyId,jdbcType=INTEGER},
	 </if>
  <if test="userId != null" >
	 #{userId,jdbcType=INTEGER},
	 </if>
  <if test="createTime != null" >
	 #{createTime,jdbcType=VARCHAR},
	 </if>
  <if test="updateTime != null" >
	 #{updateTime,jdbcType=VARCHAR},
	 </if>
  <if test="isDelete != null" >
	 #{isDelete,jdbcType=INTEGER},
	 </if>

    </trim>
  </insert>
  <insert id="insertSelectiveWithId" useGeneratedKeys="true" keyProperty="id" parameterType="com.load.model.RemoneyInfo" >
    insert into remoney_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
	  id,
 </if>
<if test="amount != null" >
	  amount,
 </if>
<if test="applyId != null" >
	  apply_id,
 </if>
<if test="userId != null" >
	  user_id,
 </if>
<if test="createTime != null" >
	  create_time,
 </if>
<if test="updateTime != null" >
	  update_time,
 </if>
<if test="isDelete != null" >
	  is_delete,
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="amount != null" >
	 #{amount,jdbcType=INTEGER},
	 </if>
  <if test="applyId != null" >
	 #{applyId,jdbcType=INTEGER},
	 </if>
  <if test="userId != null" >
	 #{userId,jdbcType=INTEGER},
	 </if>
  <if test="createTime != null" >
	 #{createTime,jdbcType=VARCHAR},
	 </if>
  <if test="updateTime != null" >
	 #{updateTime,jdbcType=VARCHAR},
	 </if>
  <if test="isDelete != null" >
	 #{isDelete,jdbcType=INTEGER},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.load.model.RemoneyInfoExample" resultType="java.lang.Integer" >
    select count(*) from remoney_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update remoney_info
    <set >
       <if test="record.id != null" >
	 id = #{record.id,jdbcType=INTEGER},
</if>
 <if test="record.amount != null" >
	 amount = #{record.amount,jdbcType=INTEGER},
</if>
 <if test="record.applyId != null" >
	 apply_id = #{record.applyId,jdbcType=INTEGER},
</if>
 <if test="record.userId != null" >
	 user_id = #{record.userId,jdbcType=INTEGER},
</if>
 <if test="record.createTime != null" >
	 create_time = #{record.createTime,jdbcType=VARCHAR},
</if>
 <if test="record.updateTime != null" >
	 update_time = #{record.updateTime,jdbcType=VARCHAR},
</if>
 <if test="record.isDelete != null" >
	 is_delete = #{record.isDelete,jdbcType=INTEGER},
</if>

    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.load.model.RemoneyInfo" >
    update remoney_info
    <set >
          <if test="record.id != null" >
	 id = #{record.id,jdbcType=INTEGER},
</if>
 <if test="record.amount != null" >
	 amount = #{record.amount,jdbcType=INTEGER},
</if>
 <if test="record.applyId != null" >
	 apply_id = #{record.applyId,jdbcType=INTEGER},
</if>
 <if test="record.userId != null" >
	 user_id = #{record.userId,jdbcType=INTEGER},
</if>
 <if test="record.createTime != null" >
	 create_time = #{record.createTime,jdbcType=VARCHAR},
</if>
 <if test="record.updateTime != null" >
	 update_time = #{record.updateTime,jdbcType=VARCHAR},
</if>
 <if test="record.isDelete != null" >
	 is_delete = #{record.isDelete,jdbcType=INTEGER},
</if>

    </set>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
</mapper>
